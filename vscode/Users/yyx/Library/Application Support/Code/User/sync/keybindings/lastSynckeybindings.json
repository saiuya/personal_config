{"ref":"158b4bc4-58f1-406d-b100-2092fc8bb548","syncData":{"version":2,"machineId":"030a3799-df5d-4166-9d49-fb170f7c1b64","content":"{\"mac\":\"[\\n    {\\n        \\\"key\\\": \\\"alt+p\\\",\\n        \\\"command\\\": \\\"workbench.action.showCommands\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+p\\\",\\n        \\\"command\\\": \\\"-workbench.action.showCommands\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+l\\\",\\n        \\\"command\\\": \\\"selectAllSearchEditorMatches\\\",\\n        \\\"when\\\": \\\"inSearchEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+l\\\",\\n        \\\"command\\\": \\\"-selectAllSearchEditorMatches\\\",\\n        \\\"when\\\": \\\"inSearchEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+l\\\",\\n        \\\"command\\\": \\\"editor.action.selectHighlights\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+l\\\",\\n        \\\"command\\\": \\\"-editor.action.selectHighlights\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+l\\\",\\n        \\\"command\\\": \\\"addCursorsAtSearchResults\\\",\\n        \\\"when\\\": \\\"fileMatchOrMatchFocus && searchViewletVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+l\\\",\\n        \\\"command\\\": \\\"-addCursorsAtSearchResults\\\",\\n        \\\"when\\\": \\\"fileMatchOrMatchFocus && searchViewletVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+l\\\",\\n        \\\"command\\\": \\\"-toggleSearchEditorContextLines\\\",\\n        \\\"when\\\": \\\"inSearchEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+l\\\",\\n        \\\"command\\\": \\\"-toggleFindInSelection\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+u\\\",\\n        \\\"command\\\": \\\"editor.action.transformToUppercase\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+i\\\",\\n        \\\"command\\\": \\\"editor.action.transformToLowercase\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+b\\\",\\n        \\\"command\\\": \\\"workbench.action.toggleSidebarVisibility\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+b\\\",\\n        \\\"command\\\": \\\"-workbench.action.toggleSidebarVisibility\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+k\\\",\\n        \\\"command\\\": \\\"workbench.action.toggleAuxiliaryBar\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+b\\\",\\n        \\\"command\\\": \\\"-workbench.action.toggleAuxiliaryBar\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+j\\\",\\n        \\\"command\\\": \\\"workbench.action.togglePanel\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+j\\\",\\n        \\\"command\\\": \\\"-workbench.action.togglePanel\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+b\\\",\\n        \\\"command\\\": \\\"-gitlens.toggleCodeLens\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !gitlens:disabled && !gitlens:disabledToggleCodeLens && config.gitlens.keymap == 'alternate'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+h\\\",\\n        \\\"command\\\": \\\"-git.viewFileHistory\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+h\\\",\\n        \\\"command\\\": \\\"-testing.toggleTestingPeekHistory\\\",\\n        \\\"when\\\": \\\"testing.isPeekVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+h\\\",\\n        \\\"command\\\": \\\"-editor.action.accessibilityHelpOpenHelpLink\\\",\\n        \\\"when\\\": \\\"accessibilityHelpIsShown\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+z\\\",\\n        \\\"command\\\": \\\"workbench.action.navigateBack\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+-\\\",\\n        \\\"command\\\": \\\"-workbench.action.navigateBack\\\",\\n        \\\"when\\\": \\\"canNavigateBack\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+z\\\",\\n        \\\"command\\\": \\\"workbench.action.navigateForward\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+-\\\",\\n        \\\"command\\\": \\\"-workbench.action.navigateForward\\\",\\n        \\\"when\\\": \\\"canNavigateForward\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-tongyi.action.inlineSuggest.acceptNextLine\\\",\\n        \\\"when\\\": \\\"TongyiLingMa.Chat.active && inlineSuggestionVisible && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+p\\\",\\n        \\\"command\\\": \\\"-tongyi.action.inlineSuggest.trigger\\\",\\n        \\\"when\\\": \\\"TongyiLingMa.Chat.active\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+l\\\",\\n        \\\"command\\\": \\\"-tongyi.show.panel\\\",\\n        \\\"when\\\": \\\"TongyiLingMa.Chat.active\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+m\\\",\\n        \\\"command\\\": \\\"-tongyi.optimize.code\\\",\\n        \\\"when\\\": \\\"TongyiLingMa.Chat.active\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+v\\\",\\n        \\\"command\\\": \\\"-tongyi.generate.comment\\\",\\n        \\\"when\\\": \\\"TongyiLingMa.Chat.active\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+-\\\",\\n        \\\"command\\\": \\\"editor.action.toggleWordWrap\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+z\\\",\\n        \\\"command\\\": \\\"-editor.action.toggleWordWrap\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+g\\\",\\n        \\\"command\\\": \\\"workbench.action.terminal.new\\\",\\n        \\\"when\\\": \\\"terminalProcessSupported || terminalWebExtensionContributedProfile\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+`\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.new\\\",\\n        \\\"when\\\": \\\"terminalProcessSupported || terminalWebExtensionContributedProfile\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+t\\\",\\n        \\\"command\\\": \\\"workbench.action.files.newUntitledFile\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+n\\\",\\n        \\\"command\\\": \\\"-workbench.action.files.newUntitledFile\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+u\\\",\\n        \\\"command\\\": \\\"-tongyi.generate.unit-tests\\\",\\n        \\\"when\\\": \\\"TongyiLingMa.Chat.active\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+f\\\",\\n        \\\"command\\\": \\\"-vue3snippets.format\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId == 'vue'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+f\\\",\\n        \\\"command\\\": \\\"workbench.view.search\\\",\\n        \\\"when\\\": \\\"workbench.view.search.active && neverMatch =~ /doesNotMatch/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+f\\\",\\n        \\\"command\\\": \\\"-workbench.view.search\\\",\\n        \\\"when\\\": \\\"workbench.view.search.active && neverMatch =~ /doesNotMatch/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+f\\\",\\n        \\\"command\\\": \\\"workbench.action.findInFiles\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+f\\\",\\n        \\\"command\\\": \\\"-workbench.action.findInFiles\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k z\\\",\\n        \\\"command\\\": \\\"-workbench.action.toggleZenMode\\\",\\n        \\\"when\\\": \\\"!isAuxiliaryWindowFocusedContext\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+c\\\",\\n        \\\"command\\\": \\\"-gitlens.showQuickCommitFileDetails\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !gitlens:disabled && config.gitlens.keymap == 'alternate'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+c\\\",\\n        \\\"command\\\": \\\"-markdown.extension.checkTaskList\\\",\\n        \\\"when\\\": \\\"false\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+f\\\",\\n        \\\"command\\\": \\\"-notebook.format\\\",\\n        \\\"when\\\": \\\"notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+f\\\",\\n        \\\"command\\\": \\\"-editor.action.formatDocument\\\",\\n        \\\"when\\\": \\\"editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+f\\\",\\n        \\\"command\\\": \\\"-editor.action.formatDocument.none\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+f\\\",\\n        \\\"command\\\": \\\"-notebook.formatCell\\\",\\n        \\\"when\\\": \\\"editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+f\\\",\\n        \\\"command\\\": \\\"-filesExplorer.findInFolder\\\",\\n        \\\"when\\\": \\\"explorerResourceIsFolder && filesExplorerFocus && foldersViewVisible && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+f\\\",\\n        \\\"command\\\": \\\"-search.action.restrictSearchToFolder\\\",\\n        \\\"when\\\": \\\"folderMatchWithResourceFocus && searchViewletVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+-\\\",\\n        \\\"command\\\": \\\"-editor.foldAllExcept\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+=\\\",\\n        \\\"command\\\": \\\"-editor.unfoldAllExcept\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+o\\\",\\n        \\\"command\\\": \\\"workbench.action.switchWindow\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+w\\\",\\n        \\\"command\\\": \\\"-workbench.action.switchWindow\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+/\\\",\\n        \\\"command\\\": \\\"editor.action.blockComment\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+a\\\",\\n        \\\"command\\\": \\\"-editor.action.blockComment\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+\\\\\\\\\\\",\\n        \\\"command\\\": \\\"notebook.cell.split\\\",\\n        \\\"when\\\": \\\"editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputInputFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+-\\\",\\n        \\\"command\\\": \\\"-notebook.cell.split\\\",\\n        \\\"when\\\": \\\"editorTextFocus && inputFocus && notebookEditorFocused && !notebookOutputInputFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+k\\\",\\n        \\\"command\\\": \\\"-editor.action.accessibilityHelpConfigureKeybindings\\\",\\n        \\\"when\\\": \\\"accessibilityHelpIsShown\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+=\\\",\\n        \\\"command\\\": \\\"readOnly.toggleFileAccess\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+m\\\",\\n        \\\"command\\\": \\\"-workbench.action.toggleMaximizeEditorGroup\\\",\\n        \\\"when\\\": \\\"editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+m\\\",\\n        \\\"command\\\": \\\"workbench.action.navigateToLastEditLocation\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+q\\\",\\n        \\\"command\\\": \\\"-workbench.action.navigateToLastEditLocation\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+p\\\",\\n        \\\"command\\\": \\\"-tongyi.explain.code\\\",\\n        \\\"when\\\": \\\"TongyiLingMa.Chat.active\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+.\\\",\\n        \\\"command\\\": \\\"editor.action.marker.nextInFiles\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"f8\\\",\\n        \\\"command\\\": \\\"-editor.action.marker.nextInFiles\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+.\\\",\\n        \\\"command\\\": \\\"editor.action.marker.next\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+f8\\\",\\n        \\\"command\\\": \\\"-editor.action.marker.next\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+,\\\",\\n        \\\"command\\\": \\\"editor.action.marker.prevInFiles\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+f8\\\",\\n        \\\"command\\\": \\\"-editor.action.marker.prevInFiles\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+,\\\",\\n        \\\"command\\\": \\\"editor.action.marker.prev\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+f8\\\",\\n        \\\"command\\\": \\\"-editor.action.marker.prev\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+b\\\",\\n        \\\"command\\\": \\\"-gitlens.toggleFileBlame\\\",\\n        \\\"when\\\": \\\"editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+x\\\",\\n        \\\"command\\\": \\\"editor.toggleFold\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+l\\\",\\n        \\\"command\\\": \\\"-editor.toggleFold\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+x\\\",\\n        \\\"command\\\": \\\"editor.toggleFoldRecursively\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+cmd+l\\\",\\n        \\\"command\\\": \\\"-editor.toggleFoldRecursively\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+f\\\",\\n        \\\"command\\\": \\\"editor.action.jumpToBracket\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+\\\\\\\\\\\",\\n        \\\"command\\\": \\\"-editor.action.jumpToBracket\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+z\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.sizeToContentWidth\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+b\\\",\\n        \\\"command\\\": \\\"-java.workspace.compile\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+u\\\",\\n        \\\"command\\\": \\\"-java.projectConfiguration.update\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+i\\\",\\n        \\\"command\\\": \\\"-editor.action.insertCursorAtEndOfEachLineSelected\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+o\\\",\\n        \\\"command\\\": \\\"-editor.action.organizeImports\\\",\\n        \\\"when\\\": \\\"textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\\\\\\\s|^)source\\\\\\\\.organizeImports\\\\\\\\b/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+r\\\",\\n        \\\"command\\\": \\\"dotnet.restartServer\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+r\\\",\\n        \\\"command\\\": \\\"java.server.restart\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+r\\\",\\n        \\\"command\\\": \\\"python.analysis.restartLanguageServer\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+r\\\",\\n        \\\"command\\\": \\\"black-formatter.restart\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+r\\\",\\n        \\\"command\\\": \\\"dart.restartAnalysisServer\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+r\\\",\\n        \\\"command\\\": \\\"swift.restartLSPServer\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+r\\\",\\n        \\\"command\\\": \\\"typescript.restartTsServer\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+r\\\",\\n        \\\"command\\\": \\\"vue.action.restartServer\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+t\\\",\\n        \\\"command\\\": \\\"workbench.action.newWindow\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+n\\\",\\n        \\\"command\\\": \\\"-workbench.action.newWindow\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k o\\\",\\n        \\\"command\\\": \\\"-workbench.action.copyEditorToNewWindow\\\",\\n        \\\"when\\\": \\\"activeEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+/\\\",\\n        \\\"command\\\": \\\"chatgpt.choosePredefinedPrompt\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+/\\\",\\n        \\\"command\\\": \\\"chatgpt.editPredefinedPrompt\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+[Backslash]\\\",\\n        \\\"command\\\": \\\"chatgpt.customPrompt\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+'\\\",\\n        \\\"command\\\": \\\"chatgpt.explainPls\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+;\\\",\\n        \\\"command\\\": \\\"chatgpt.refactor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+h\\\",\\n        \\\"command\\\": \\\"-references-view.showCallHierarchy\\\",\\n        \\\"when\\\": \\\"editorHasCallHierarchyProvider\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+h\\\",\\n        \\\"command\\\": \\\"-gitlens.showQuickRepoHistory\\\",\\n        \\\"when\\\": \\\"!gitlens:disabled && config.gitlens.keymap == 'alternate'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+h\\\",\\n        \\\"command\\\": \\\"-editor.showCallHierarchy\\\",\\n        \\\"when\\\": \\\"editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+h\\\",\\n        \\\"command\\\": \\\"-editor.showSupertypes\\\",\\n        \\\"when\\\": \\\"typeHierarchyVisible && typeHierarchyDirection == 'subtypes'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+h\\\",\\n        \\\"command\\\": \\\"-editor.showSubtypes\\\",\\n        \\\"when\\\": \\\"typeHierarchyVisible && typeHierarchyDirection == 'supertypes'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+h\\\",\\n        \\\"command\\\": \\\"-editor.showOutgoingCalls\\\",\\n        \\\"when\\\": \\\"callHierarchyVisible && callHierarchyDirection == 'incomingCalls'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+h\\\",\\n        \\\"command\\\": \\\"-editor.showIncomingCalls\\\",\\n        \\\"when\\\": \\\"callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+t\\\",\\n        \\\"command\\\": \\\"-translates.candidate\\\",\\n        \\\"when\\\": \\\"editorHasSelection\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+t\\\",\\n        \\\"command\\\": \\\"-translates.replace\\\",\\n        \\\"when\\\": \\\"editorHasSelection\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+t\\\",\\n        \\\"command\\\": \\\"-translates.clipboard\\\",\\n        \\\"when\\\": \\\"editorHasSelection\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k alt+t\\\",\\n        \\\"command\\\": \\\"-translates.hover\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+t\\\",\\n        \\\"command\\\": \\\"-translates.translates\\\",\\n        \\\"when\\\": \\\"editorHasSelection\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+enter\\\",\\n        \\\"command\\\": \\\"-list.toggleSelection\\\",\\n        \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+enter\\\",\\n        \\\"command\\\": \\\"-search.action.replaceAllInFile\\\",\\n        \\\"when\\\": \\\"fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+enter\\\",\\n        \\\"command\\\": \\\"-search.action.replaceAllInFolder\\\",\\n        \\\"when\\\": \\\"folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.sendToNewChat\\\",\\n        \\\"when\\\": \\\"chatInputHasText && inChatInput && !chatSessionRequestInProgress\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+enter\\\",\\n        \\\"command\\\": \\\"-mysql.runAllQuery\\\",\\n        \\\"when\\\": \\\"editorLangId == 'cql' || editorLangId == 'dbclient-js' || editorLangId == 'postgres' || editorLangId == 'sql'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-inlineChat.acceptChanges\\\",\\n        \\\"when\\\": \\\"inlineChatHasProvider && inlineChatVisible && !inlineChatDocumentChanged || inlineChatHasProvider && inlineChatVisible && config.inlineChat.mode != 'preview'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-acceptRenameInputWithPreview\\\",\\n        \\\"when\\\": \\\"config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.submitSecondaryAgent\\\",\\n        \\\"when\\\": \\\"chatInputHasText && inChatInput && !chatInputHasAgent && !chatSessionRequestInProgress\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-breadcrumbs.revealFocused\\\",\\n        \\\"when\\\": \\\"breadcrumbsActive && breadcrumbsVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-breadcrumbs.revealFocusedFromTreeAside\\\",\\n        \\\"when\\\": \\\"breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-debug.openBreakpointToSide\\\",\\n        \\\"when\\\": \\\"breakpointsFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-editor.action.replaceAll\\\",\\n        \\\"when\\\": \\\"editorFocus && findWidgetVisible && replaceInputFocussed\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-editor.action.submitComment\\\",\\n        \\\"when\\\": \\\"commentEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-interactive.execute\\\",\\n        \\\"when\\\": \\\"activeEditor == 'workbench.editor.interactive'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-markdown.extension.onCtrlEnterKey\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/ || editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && config.editor.acceptSuggestionOnEnter == 'off' && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-mysql.runES\\\",\\n        \\\"when\\\": \\\"editorLangId == 'es'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-notebook.cell.chat.acceptChanges\\\",\\n        \\\"when\\\": \\\"inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-notebook.cell.chat.acceptChanges\\\",\\n        \\\"when\\\": \\\"notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-previewSelectedCodeAction\\\",\\n        \\\"when\\\": \\\"codeActionMenuVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-refactorPreview.apply\\\",\\n        \\\"when\\\": \\\"refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-scm.acceptInput\\\",\\n        \\\"when\\\": \\\"scmRepository\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-mysql.mock.run\\\",\\n        \\\"when\\\": \\\"resourceFilename =~ /mock\\\\\\\\.json$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.chat.runCommand\\\",\\n        \\\"when\\\": \\\"terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.chat.runFirstCommand\\\",\\n        \\\"when\\\": \\\"terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-search.action.openInEditor\\\",\\n        \\\"when\\\": \\\"hasSearchResult && searchViewletFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+enter\\\",\\n        \\\"command\\\": \\\"-debug.openBreakpointToSide\\\",\\n        \\\"when\\\": \\\"breakpointsFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+enter\\\",\\n        \\\"command\\\": \\\"-editor.action.selectAllMatches\\\",\\n        \\\"when\\\": \\\"editorFocus && findWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+enter\\\",\\n        \\\"command\\\": \\\"-gitlens.key.alt+enter\\\",\\n        \\\"when\\\": \\\"gitlens:key:alt+enter\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+enter\\\",\\n        \\\"command\\\": \\\"-jupyter.runcurrentcellandaddbelow\\\",\\n        \\\"when\\\": \\\"editorTextFocus && jupyter.hascodecells && !editorHasSelection && !notebookEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+enter\\\",\\n        \\\"command\\\": \\\"-testing.editFocusedTest\\\",\\n        \\\"when\\\": \\\"focusedView == 'workbench.view.testing'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.chat.insertCommand\\\",\\n        \\\"when\\\": \\\"terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.chat.insertFirstCommand\\\",\\n        \\\"when\\\": \\\"terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+enter\\\",\\n        \\\"command\\\": \\\"-notebook.cell.executeAndInsertBelow\\\",\\n        \\\"when\\\": \\\"notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+enter\\\",\\n        \\\"command\\\": \\\"editor.action.insertLineBefore\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+enter\\\",\\n        \\\"command\\\": \\\"-editor.action.insertLineBefore\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+enter\\\",\\n        \\\"command\\\": \\\"editor.action.insertLineAfter\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-editor.action.insertLineAfter\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-mysql.runSQL\\\",\\n        \\\"when\\\": \\\"config.database-client.executeCursorSQLByShortcut && editorLangId == 'cql' || config.database-client.executeCursorSQLByShortcut && editorLangId == 'dbclient-js' || config.database-client.executeCursorSQLByShortcut && editorLangId == 'postgres' || config.database-client.executeCursorSQLByShortcut && editorLangId == 'sql' || editorHasSelection && editorLangId == 'cql' || editorHasSelection && editorLangId == 'dbclient-js' || editorHasSelection && editorLangId == 'postgres' || editorHasSelection && editorLangId == 'sql'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+cmd+enter\\\",\\n        \\\"command\\\": \\\"-mysql.runSQLInNew\\\",\\n        \\\"when\\\": \\\"editorLangId == 'cql' || editorLangId == 'dbclient-js' || editorLangId == 'postgres' || editorLangId == 'sql'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\n        \\\"command\\\": \\\"-explorer.openToSide\\\",\\n        \\\"when\\\": \\\"explorerViewletFocus && foldersViewVisible && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\n        \\\"command\\\": \\\"-gitlens.key.ctrl+enter\\\",\\n        \\\"when\\\": \\\"gitlens:key:ctrl+enter\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\n        \\\"command\\\": \\\"-openReferenceToSide\\\",\\n        \\\"when\\\": \\\"listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\n        \\\"command\\\": \\\"-problems.action.openToSide\\\",\\n        \\\"when\\\": \\\"problemFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\n        \\\"command\\\": \\\"-search.action.openResultToSide\\\",\\n        \\\"when\\\": \\\"fileMatchOrMatchFocus && searchViewletVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.insertCodeBlock\\\",\\n        \\\"when\\\": \\\"accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat && !inChatInput\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\n        \\\"command\\\": \\\"-jupyter.runByLineStop\\\",\\n        \\\"when\\\": \\\"notebookCellResource in 'jupyter.notebookeditor.runByLineCells'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\n        \\\"command\\\": \\\"-notebook.cell.executeAndFocusContainer\\\",\\n        \\\"when\\\": \\\"notebookCellListFocused || editorTextFocus && inputFocus && notebookEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\n        \\\"command\\\": \\\"-notebook.cell.quitEdit\\\",\\n        \\\"when\\\": \\\"inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\n        \\\"command\\\": \\\"-notebook.cell.execute\\\",\\n        \\\"when\\\": \\\"notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelCount > 0 || !notebookCellExecuting && notebookCellType == 'code' && notebookCellListFocused || inlineChatFocused && notebookCellChatFocused && notebookKernelSourceCount > 0 || inlineChatFocused && notebookCellChatFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+enter\\\",\\n        \\\"command\\\": \\\"-jupyter.runcurrentcell\\\",\\n        \\\"when\\\": \\\"editorTextFocus && isWorkspaceTrusted && jupyter.hascodecells && !editorHasSelection && !jupyter.havenativecells && !notebookEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-notebook.cell.insertCodeCellBelow\\\",\\n        \\\"when\\\": \\\"notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == ''\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+r\\\",\\n        \\\"command\\\": \\\"jupyter.restartkernel\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+enter\\\",\\n        \\\"command\\\": \\\"-jupyter.execSelectionInteractive\\\",\\n        \\\"when\\\": \\\"editorTextFocus && isWorkspaceTrusted && jupyter.ownsSelection && !findInputFocussed && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+enter\\\",\\n        \\\"command\\\": \\\"-python.execInREPL\\\",\\n        \\\"when\\\": \\\"config.python.REPL.sendToNativeREPL && editorTextFocus && !accessibilityModeEnabled && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+enter\\\",\\n        \\\"command\\\": \\\"-python.execSelectionInTerminal\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !findInputFocussed && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python' && activeEditor != 'workbench.editor.interactive'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+enter\\\",\\n        \\\"command\\\": \\\"-notebook.cell.insertCodeCellAbove\\\",\\n        \\\"when\\\": \\\"notebookCellListFocused && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+e cmd+e\\\",\\n        \\\"command\\\": \\\"-sqltools.executeQuery\\\",\\n        \\\"when\\\": \\\"editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+alt+enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.runInTerminal\\\",\\n        \\\"when\\\": \\\"accessibleViewInCodeBlock && chatIsEnabled || chatIsEnabled && inChat\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+alt+r\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.runRecentCommand\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+enter\\\",\\n        \\\"command\\\": \\\"workbench.action.terminal.runActiveFile\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+r\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.runRecentCommand\\\",\\n        \\\"when\\\": \\\"accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+enter\\\",\\n        \\\"command\\\": \\\"-csdevkit.debug.hotReload\\\",\\n        \\\"when\\\": \\\"hotReloadEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"space\\\",\\n        \\\"command\\\": \\\"-debug.toggleBreakpoint\\\",\\n        \\\"when\\\": \\\"breakpointsFocused && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+.\\\",\\n        \\\"command\\\": \\\"-breadcrumbs.toggleToOn\\\",\\n        \\\"when\\\": \\\"!config.breadcrumbs.enabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+f9\\\",\\n        \\\"command\\\": \\\"-editor.debug.action.toggleInlineBreakpoint\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+h\\\",\\n        \\\"command\\\": \\\"-gitlens.showQuickFileHistory\\\",\\n        \\\"when\\\": \\\"!gitlens:disabled && config.gitlens.keymap == 'alternate'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+s\\\",\\n        \\\"command\\\": \\\"-gitlens.showQuickRepoStatus\\\",\\n        \\\"when\\\": \\\"!gitlens:disabled && config.gitlens.keymap == 'alternate'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+,\\\",\\n        \\\"command\\\": \\\"-gitlens.key.alt+,\\\",\\n        \\\"when\\\": \\\"gitlens:key:,\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+.\\\",\\n        \\\"command\\\": \\\"-gitlens.key.alt+.\\\",\\n        \\\"when\\\": \\\"gitlens:key:.\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+left\\\",\\n        \\\"command\\\": \\\"-gitlens.key.alt+left\\\",\\n        \\\"when\\\": \\\"gitlens:key:alt+left\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+right\\\",\\n        \\\"command\\\": \\\"-gitlens.key.alt+right\\\",\\n        \\\"when\\\": \\\"gitlens:key:alt+right\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+left\\\",\\n        \\\"command\\\": \\\"-gitlens.key.ctrl+left\\\",\\n        \\\"when\\\": \\\"gitlens:key:ctrl+left\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+right\\\",\\n        \\\"command\\\": \\\"-gitlens.key.ctrl+right\\\",\\n        \\\"when\\\": \\\"gitlens:key:ctrl+right\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+,\\\",\\n        \\\"command\\\": \\\"-gitlens.diffLineWithPrevious\\\",\\n        \\\"when\\\": \\\"editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+.\\\",\\n        \\\"command\\\": \\\"-gitlens.diffWithWorking\\\",\\n        \\\"when\\\": \\\"editorTextFocus && gitlens:enabled && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+,\\\",\\n        \\\"command\\\": \\\"-gitlens.diffWithPreviousInDiffRight\\\",\\n        \\\"when\\\": \\\"editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+,\\\",\\n        \\\"command\\\": \\\"-gitlens.diffWithPreviousInDiffLeft\\\",\\n        \\\"when\\\": \\\"editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+,\\\",\\n        \\\"command\\\": \\\"-gitlens.diffWithPrevious\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /tracked/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+.\\\",\\n        \\\"command\\\": \\\"-gitlens.diffWithNextInDiffRight\\\",\\n        \\\"when\\\": \\\"editorTextFocus && gitlens:enabled && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+.\\\",\\n        \\\"command\\\": \\\"-gitlens.diffWithNextInDiffLeft\\\",\\n        \\\"when\\\": \\\"editorTextFocus && gitlens:enabled && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+.\\\",\\n        \\\"command\\\": \\\"-gitlens.diffWithNext\\\",\\n        \\\"when\\\": \\\"editorTextFocus && gitlens:enabled && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resourceScheme =~ /^(gitlens|git|pr)$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+/\\\",\\n        \\\"command\\\": \\\"-gitlens.gitCommands\\\",\\n        \\\"when\\\": \\\"!gitlens:disabled && config.gitlens.keymap == 'alternate'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+tab\\\",\\n        \\\"command\\\": \\\"workbench.action.debug.start\\\",\\n        \\\"when\\\": \\\"debuggersAvailable && debugState == 'inactive'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"f5\\\",\\n        \\\"command\\\": \\\"-workbench.action.debug.start\\\",\\n        \\\"when\\\": \\\"debuggersAvailable && debugState == 'inactive'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+c\\\",\\n        \\\"command\\\": \\\"yo1dog.cursor-align.alignCursors\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+a\\\",\\n        \\\"command\\\": \\\"-yo1dog.cursor-align.alignCursors\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+s\\\",\\n        \\\"command\\\": \\\"-markdown.extension.editing.toggleStrikethrough\\\",\\n        \\\"when\\\": \\\"false\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+j\\\",\\n        \\\"command\\\": \\\"-workbench.action.search.toggleQueryDetails\\\",\\n        \\\"when\\\": \\\"inSearchEditor || searchViewletFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+x\\\",\\n        \\\"command\\\": \\\"editor.action.deleteLines\\\",\\n        \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+k\\\",\\n        \\\"command\\\": \\\"-editor.action.deleteLines\\\",\\n        \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+x\\\",\\n        \\\"command\\\": \\\"-workbench.view.extensions\\\",\\n        \\\"when\\\": \\\"viewContainer.workbench.view.extensions.enabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+v\\\",\\n        \\\"command\\\": \\\"-csv.preview\\\",\\n        \\\"when\\\": \\\"editorLangId == 'csv'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+v\\\",\\n        \\\"command\\\": \\\"-csv.preview\\\",\\n        \\\"when\\\": \\\"editorLangId == 'tsv'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+v\\\",\\n        \\\"command\\\": \\\"-csv.preview\\\",\\n        \\\"when\\\": \\\"editorLangId == 'csv (semicolon)'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+v\\\",\\n        \\\"command\\\": \\\"-csv.preview\\\",\\n        \\\"when\\\": \\\"editorLangId == 'csv (pipe)'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+v\\\",\\n        \\\"command\\\": \\\"-excel.preview\\\",\\n        \\\"when\\\": \\\"editorLangId == 'excel'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+v\\\",\\n        \\\"command\\\": \\\"-java.action.filesExplorerPasteAction\\\",\\n        \\\"when\\\": \\\"config.editor.pasteAs.enabled && explorerViewletFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+v\\\",\\n        \\\"command\\\": \\\"-markdown.showPreview\\\",\\n        \\\"when\\\": \\\"!notebookEditorFocused && editorLangId == 'markdown'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+v\\\",\\n        \\\"command\\\": \\\"-notebook.cell.pasteAbove\\\",\\n        \\\"when\\\": \\\"notebookEditorFocused && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+v\\\",\\n        \\\"command\\\": \\\"-java.action.clipboardPasteAction\\\",\\n        \\\"when\\\": \\\"javaLSReady && editorLangId == 'java'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+v\\\",\\n        \\\"command\\\": \\\"-markdown.extension.closePreview\\\",\\n        \\\"when\\\": \\\"activeWebviewPanelId == 'markdown.preview'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+j\\\",\\n        \\\"command\\\": \\\"extension.joinText\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+k ctrl+2\\\",\\n        \\\"command\\\": \\\"-extension.joinText\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+j\\\",\\n        \\\"command\\\": \\\"extension.joinTextAndDeleteIndent\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+h\\\",\\n        \\\"command\\\": \\\"extension.splitText\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+k ctrl+1\\\",\\n        \\\"command\\\": \\\"-extension.splitText\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k\\\",\\n        \\\"command\\\": \\\"extension.splitTextAndDeleteSeparator\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+h\\\",\\n        \\\"command\\\": \\\"-workbench.action.replaceInFiles\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+d\\\",\\n        \\\"command\\\": \\\"-editor.action.addSelectionToNextFindMatch\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+d\\\",\\n        \\\"command\\\": \\\"-workbench.view.debug\\\",\\n        \\\"when\\\": \\\"viewContainer.workbench.view.debug.enabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+d\\\",\\n        \\\"command\\\": \\\"workbench.action.replaceInFiles\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+d\\\",\\n        \\\"command\\\": \\\"editor.action.startFindReplaceAction\\\",\\n        \\\"when\\\": \\\"editorFocus || editorIsOpen\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+f\\\",\\n        \\\"command\\\": \\\"-editor.action.startFindReplaceAction\\\",\\n        \\\"when\\\": \\\"editorFocus || editorIsOpen\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+.\\\",\\n        \\\"command\\\": \\\"-editor.action.inPlaceReplace.down\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+,\\\",\\n        \\\"command\\\": \\\"-editor.action.inPlaceReplace.up\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+1\\\",\\n        \\\"command\\\": \\\"-editor.action.replaceOne\\\",\\n        \\\"when\\\": \\\"editorFocus && findWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+e\\\",\\n        \\\"command\\\": \\\"-editor.action.toggleScreenReaderAccessibilityMode\\\",\\n        \\\"when\\\": \\\"accessibilityHelpIsShown\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+e q\\\",\\n        \\\"command\\\": \\\"-sqltools.bookmarkSelection\\\",\\n        \\\"when\\\": \\\"editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+e cmd+r\\\",\\n        \\\"command\\\": \\\"-sqltools.deleteBookmark\\\",\\n        \\\"when\\\": \\\"!config.sqltools.disableChordKeybindings\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+e cmd+a\\\",\\n        \\\"command\\\": \\\"-sqltools.runFromBookmarks\\\",\\n        \\\"when\\\": \\\"!config.sqltools.disableChordKeybindings\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+e cmd+d\\\",\\n        \\\"command\\\": \\\"-sqltools.describeTable\\\",\\n        \\\"when\\\": \\\"!config.sqltools.disableChordKeybindings\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+e cmd+s\\\",\\n        \\\"command\\\": \\\"-sqltools.showRecords\\\",\\n        \\\"when\\\": \\\"!config.sqltools.disableChordKeybindings\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+e cmd+h\\\",\\n        \\\"command\\\": \\\"-sqltools.runFromHistory\\\",\\n        \\\"when\\\": \\\"!config.sqltools.disableChordKeybindings\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+e cmd+b\\\",\\n        \\\"command\\\": \\\"-sqltools.formatSql\\\",\\n        \\\"when\\\": \\\"editorHasSelection && editorTextFocus && !config.sqltools.disableChordKeybindings && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+e\\\",\\n        \\\"command\\\": \\\"-actions.findWithSelection\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+e cmd+e\\\",\\n        \\\"command\\\": \\\"-workbench.action.quickOpen\\\",\\n        \\\"when\\\": \\\"!config.sqltools.disableChordKeybindings && !editorHasSelection && !editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.startVoiceChat\\\",\\n        \\\"when\\\": \\\"chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress && !terminalChatActiveRequest\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.stopListeningAndSubmit\\\",\\n        \\\"when\\\": \\\"inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'terminal' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+y\\\",\\n        \\\"command\\\": \\\"emojisense.quickEmoji\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-emojisense.quickEmoji\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+y\\\",\\n        \\\"command\\\": \\\"emojisense.quickEmojiTerminal\\\",\\n        \\\"when\\\": \\\"terminalFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-emojisense.quickEmojiTerminal\\\",\\n        \\\"when\\\": \\\"terminalFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-markdown.extension.editing.toggleItalic\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.chat.focusInput\\\",\\n        \\\"when\\\": \\\"terminalChatFocus && !inlineChatFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-inlineChat.start\\\",\\n        \\\"when\\\": \\\"editorFocus && inlineChatHasProvider && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.chat.start\\\",\\n        \\\"when\\\": \\\"terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.holdToVoiceChatInChatView\\\",\\n        \\\"when\\\": \\\"chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-notebook.cell.chat.start\\\",\\n        \\\"when\\\": \\\"config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-inlineChat.holdForSpeech\\\",\\n        \\\"when\\\": \\\"hasSpeechProvider && inlineChatHasProvider && inlineChatVisible && textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+b\\\",\\n        \\\"command\\\": \\\"-markdown.extension.editing.toggleBold\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+escape\\\",\\n        \\\"command\\\": \\\"editor.action.triggerSuggest\\\",\\n        \\\"when\\\": \\\"editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-editor.action.triggerSuggest\\\",\\n        \\\"when\\\": \\\"editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+b\\\",\\n        \\\"command\\\": \\\"focusSuggestion\\\",\\n        \\\"when\\\": \\\"suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-focusSuggestion\\\",\\n        \\\"when\\\": \\\"suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+b\\\",\\n        \\\"command\\\": \\\"toggleSuggestionDetails\\\",\\n        \\\"when\\\": \\\"suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-toggleSuggestionDetails\\\",\\n        \\\"when\\\": \\\"suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+m\\\",\\n        \\\"command\\\": \\\"-markdown.extension.editing.toggleMath\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+,\\\",\\n        \\\"command\\\": \\\"-workbench.action.openSettings\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+.\\\",\\n        \\\"command\\\": \\\"-notebook.cell.openFailureActions\\\",\\n        \\\"when\\\": \\\"notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+.\\\",\\n        \\\"command\\\": \\\"-editor.action.quickFix\\\",\\n        \\\"when\\\": \\\"editorHasCodeActionsProvider && textInputFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+.\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.showQuickFixes\\\",\\n        \\\"when\\\": \\\"terminalFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+.\\\",\\n        \\\"command\\\": \\\"-acceptSelectedCodeAction\\\",\\n        \\\"when\\\": \\\"codeActionMenuVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+.\\\",\\n        \\\"command\\\": \\\"-editor.changeDropType\\\",\\n        \\\"when\\\": \\\"dropWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+.\\\",\\n        \\\"command\\\": \\\"-editor.changePasteType\\\",\\n        \\\"when\\\": \\\"pasteWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+.\\\",\\n        \\\"command\\\": \\\"-problems.action.showQuickFixes\\\",\\n        \\\"when\\\": \\\"problemFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+g\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.openDetectedLink\\\",\\n        \\\"when\\\": \\\"accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+,\\\",\\n        \\\"command\\\": \\\"editor.action.previousMatchFindAction\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+g\\\",\\n        \\\"command\\\": \\\"-editor.action.previousMatchFindAction\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+,\\\",\\n        \\\"command\\\": \\\"workbench.action.terminal.findPrevious\\\",\\n        \\\"when\\\": \\\"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+g\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.findPrevious\\\",\\n        \\\"when\\\": \\\"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+g\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.goToRecentDirectory\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+g\\\",\\n        \\\"command\\\": \\\"-editor.action.nextMatchFindAction\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+g\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.findNext\\\",\\n        \\\"when\\\": \\\"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+g\\\",\\n        \\\"command\\\": \\\"editor.action.joinLines\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+j\\\",\\n        \\\"command\\\": \\\"-editor.action.joinLines\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+s\\\",\\n        \\\"command\\\": \\\"-workbench.action.files.saveLocalFile\\\",\\n        \\\"when\\\": \\\"remoteFileDialogVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+f\\\",\\n        \\\"command\\\": \\\"-repl.action.filter\\\",\\n        \\\"when\\\": \\\"inDebugRepl && textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+a\\\",\\n        \\\"command\\\": \\\"-notification.acceptPrimaryAction\\\",\\n        \\\"when\\\": \\\"notificationFocus || notificationToastsVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+g\\\",\\n        \\\"command\\\": \\\"HookyQR.minify\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+g\\\",\\n        \\\"command\\\": \\\"HookyQR.minifyDir\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+alt+s\\\",\\n        \\\"command\\\": \\\"-java.action.doCleanup\\\",\\n        \\\"when\\\": \\\"javaLSReady && editorLangId == 'java'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+down\\\",\\n        \\\"command\\\": \\\"-notebook.cell.moveDown\\\",\\n        \\\"when\\\": \\\"notebookEditorFocused && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+down\\\",\\n        \\\"command\\\": \\\"-editor.action.pageDownHover\\\",\\n        \\\"when\\\": \\\"editorHoverFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+down\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.accessibleBufferGoToNextCommand\\\",\\n        \\\"when\\\": \\\"accessibleViewIsShown && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+down\\\",\\n        \\\"command\\\": \\\"-history.showNext\\\",\\n        \\\"when\\\": \\\"historyNavigationForwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+down\\\",\\n        \\\"command\\\": \\\"-list.focusAnyDown\\\",\\n        \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+down\\\",\\n        \\\"command\\\": \\\"-markdown.extension.onMoveLineDown\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+down\\\",\\n        \\\"command\\\": \\\"-scm.forceViewNextCommit\\\",\\n        \\\"when\\\": \\\"scmRepository\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+down\\\",\\n        \\\"command\\\": \\\"-showNextParameterHint\\\",\\n        \\\"when\\\": \\\"editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-cursorBottom\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-explorer.openAndPassFocus\\\",\\n        \\\"when\\\": \\\"filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-inlineChat.arrowOutDown\\\",\\n        \\\"when\\\": \\\"inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-inlineChat.viewInChat\\\",\\n        \\\"when\\\": \\\"inlineChatHasProvider && inlineChatVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-interactive.scrollToBottom\\\",\\n        \\\"when\\\": \\\"activeEditor == 'workbench.editor.interactive'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-keybindings.editor.focusKeybindings\\\",\\n        \\\"when\\\": \\\"inKeybindings && inKeybindingsSearch\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-list.scrollDown\\\",\\n        \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-list.select\\\",\\n        \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-list.stickyScrollselect\\\",\\n        \\\"when\\\": \\\"treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-notebook.cell.chat.arrowOutDown\\\",\\n        \\\"when\\\": \\\"inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-notebook.cell.chat.focus\\\",\\n        \\\"when\\\": \\\"notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-notebook.cell.chat.focusNextCell\\\",\\n        \\\"when\\\": \\\"inlineChatFocused && notebookCellChatFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-notebook.cell.focusNextChatWidget\\\",\\n        \\\"when\\\": \\\"editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-problems.action.focusProblemsFromFilter\\\",\\n        \\\"when\\\": \\\"problemsFilterFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-problems.action.open\\\",\\n        \\\"when\\\": \\\"problemFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-quickInput.nextSeparatorWithQuickAccessFallback\\\",\\n        \\\"when\\\": \\\"inQuickInput && quickInputType == 'quickPick'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-revealReference\\\",\\n        \\\"when\\\": \\\"listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-search.action.openResult\\\",\\n        \\\"when\\\": \\\"fileMatchOrMatchFocus && searchViewletVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-search.focus.nextInputBox\\\",\\n        \\\"when\\\": \\\"inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-selectNextCodeAction\\\",\\n        \\\"when\\\": \\\"codeActionMenuVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-selectNextSuggestion\\\",\\n        \\\"when\\\": \\\"suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-widgetNavigation.focusNext\\\",\\n        \\\"when\\\": \\\"inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.focusInput\\\",\\n        \\\"when\\\": \\\"inChat && !inChatInput\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-inlineChat.focus\\\",\\n        \\\"when\\\": \\\"editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.chat.focusResponse\\\",\\n        \\\"when\\\": \\\"terminalChatFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-notebook.focusBottom\\\",\\n        \\\"when\\\": \\\"notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == ''\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.focus\\\",\\n        \\\"when\\\": \\\"accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.scrollToNextCommand\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-commentsFocusViewFromFilter\\\",\\n        \\\"when\\\": \\\"commentsFilterFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+right\\\",\\n        \\\"command\\\": \\\"-quickInput.acceptInBackground\\\",\\n        \\\"when\\\": \\\"cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+right\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.sendSequence\\\",\\n        \\\"when\\\": \\\"terminalFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"enter\\\",\\n        \\\"command\\\": \\\"-markdown.extension.onEnterKey\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && !suggestWidgetVisible && vim.mode != 'CommandlineInProgress' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'EasyMotionMode' && vim.mode != 'Normal' && vim.mode != 'Replace' && vim.mode != 'SearchInProgressMode' && vim.mode != 'SurroundInputMode' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && editorLangId =~ /^markdown$|^rmd$|^quarto$/ || editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && config.editor.acceptSuggestionOnEnter == 'off' && vim.mode != 'CommandlineInProgress' && vim.mode != 'EasyMotionInputMode' && vim.mode != 'EasyMotionMode' && vim.mode != 'Normal' && vim.mode != 'Replace' && vim.mode != 'SearchInProgressMode' && vim.mode != 'SurroundInputMode' && vim.mode != 'Visual' && vim.mode != 'VisualBlock' && vim.mode != 'VisualLine' && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+enter\\\",\\n        \\\"command\\\": \\\"-markdown.extension.onShiftEnterKey\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/ || editorTextFocus && !editorHasMultipleSelections && !editorReadonly && !markdown.extension.editor.cursor.inFencedCodeBlock && !markdown.extension.editor.cursor.inMathEnv && config.editor.acceptSuggestionOnEnter == 'off' && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"tab\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.acceptSelectedSuggestion\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.acceptSelectedSuggestionEnter\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"enter\\\",\\n        \\\"command\\\": \\\"-acceptSelectedSuggestion\\\",\\n        \\\"when\\\": \\\"acceptSuggestionOnEnter && suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+tab\\\",\\n        \\\"command\\\": \\\"-acceptAlternativeSelectedSuggestion\\\",\\n        \\\"when\\\": \\\"suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+enter\\\",\\n        \\\"command\\\": \\\"-acceptAlternativeSelectedSuggestion\\\",\\n        \\\"when\\\": \\\"suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+alt+c\\\",\\n        \\\"command\\\": \\\"-cangjie.cjlint\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+alt+g\\\",\\n        \\\"command\\\": \\\"-cangjie.cjcov\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+f\\\",\\n        \\\"command\\\": \\\"-cursorRight\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+alt+f\\\",\\n        \\\"command\\\": \\\"-extension.formatCj\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+/\\\",\\n        \\\"command\\\": \\\"-notebook.commentSelectedCells\\\",\\n        \\\"when\\\": \\\"notebookEditable && notebookEditorFocused && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+/\\\",\\n        \\\"command\\\": \\\"-toggleExplainMode\\\",\\n        \\\"when\\\": \\\"suggestWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+/\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.attachContext\\\",\\n        \\\"when\\\": \\\"config.chat.experimental.variables.editor && inChatInput && chatLocation == 'editor' || config.chat.experimental.variables.notebook && inChatInput && chatLocation == 'notebook' || config.chat.experimental.variables.terminal && inChatInput && chatLocation == 'terminal' || inChatInput && !quickChatHasFocus && chatLocation == 'panel'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+c\\\",\\n        \\\"command\\\": \\\"-qwerty-learner.toggleChapterCycleMode\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+q\\\",\\n        \\\"command\\\": \\\"-qwerty-learner.start\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+space\\\",\\n        \\\"command\\\": \\\"-editor.action.triggerSuggest\\\",\\n        \\\"when\\\": \\\"editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+escape\\\",\\n        \\\"command\\\": \\\"-editor.action.triggerSuggest\\\",\\n        \\\"when\\\": \\\"editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+b\\\",\\n        \\\"command\\\": \\\"-jdk.workspace.compile\\\",\\n        \\\"when\\\": \\\"nbJdkReady\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+b\\\",\\n        \\\"command\\\": \\\"-gitlens.toggleFileBlame\\\",\\n        \\\"when\\\": \\\"editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:blameable'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+r\\\",\\n        \\\"command\\\": \\\"-remote-wsl.revealInExplorer\\\",\\n        \\\"when\\\": \\\"editorFocus && remoteName == 'wsl'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+,\\\",\\n        \\\"command\\\": \\\"-gitlens.diffWithPrevious\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !isInDiffEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+,\\\",\\n        \\\"command\\\": \\\"-gitlens.diffWithPreviousInDiffLeft\\\",\\n        \\\"when\\\": \\\"editorTextFocus && isInDiffEditor && !isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+,\\\",\\n        \\\"command\\\": \\\"-gitlens.diffWithPreviousInDiffRight\\\",\\n        \\\"when\\\": \\\"editorTextFocus && isInDiffRightEditor && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+,\\\",\\n        \\\"command\\\": \\\"-gitlens.diffLineWithPrevious\\\",\\n        \\\"when\\\": \\\"editorTextFocus && config.gitlens.keymap == 'alternate' && resource in 'gitlens:tabs:tracked'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+.\\\",\\n        \\\"command\\\": \\\"-csharpToTypeScript.csharpToTypeScriptPasteAs\\\",\\n        \\\"when\\\": \\\"resourceLangId == 'csharp' || resourceLangId == 'typescript'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+/\\\",\\n        \\\"command\\\": \\\"-csharpToTypeScript.csharpToTypeScriptToClipboard\\\",\\n        \\\"when\\\": \\\"resourceLangId == 'csharp' || resourceLangId == 'typescript'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+i\\\",\\n        \\\"command\\\": \\\"-extension.goToController\\\",\\n        \\\"when\\\": \\\"isView && resourceFilename =~ /.*\\\\\\\\.cshtml$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+i\\\",\\n        \\\"command\\\": \\\"-extension.goToView\\\",\\n        \\\"when\\\": \\\"isController && resourceFilename =~ /.*(?<!\\\\\\\\.cshtml|\\\\\\\\.razor)\\\\\\\\.cs$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+i\\\",\\n        \\\"command\\\": \\\"-inlineChat.start\\\",\\n        \\\"when\\\": \\\"editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+i\\\",\\n        \\\"command\\\": \\\"-emojisense.quickEmojitext\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+i\\\",\\n        \\\"command\\\": \\\"-emojisense.quickEmojitextTerminal\\\",\\n        \\\"when\\\": \\\"terminalFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+i\\\",\\n        \\\"command\\\": \\\"-workbench.action.quickchat.toggle\\\",\\n        \\\"when\\\": \\\"chatIsEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+o\\\",\\n        \\\"command\\\": \\\"-C_Cpp.SwitchHeaderSource\\\",\\n        \\\"when\\\": \\\"editorTextFocus && editorLangId =~ /^(c|(cuda-)?cpp)$/ && !(config.C_Cpp.intelliSenseEngine =~ /^[dD]isabled$/)\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+o\\\",\\n        \\\"command\\\": \\\"-extension.goToCodeBehind\\\",\\n        \\\"when\\\": \\\"resourceScheme == 'file' && resourceFilename =~ /.*\\\\\\\\.razor$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+o\\\",\\n        \\\"command\\\": \\\"-extension.goToBlazorComponent\\\",\\n        \\\"when\\\": \\\"resourceScheme == 'file' && resourceFilename =~ /.*\\\\\\\\.razor\\\\\\\\.cs$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+o\\\",\\n        \\\"command\\\": \\\"-extension.goToController\\\",\\n        \\\"when\\\": \\\"isView && resourceFilename =~ /.*\\\\\\\\.cshtml$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+o\\\",\\n        \\\"command\\\": \\\"-extension.goToPage\\\",\\n        \\\"when\\\": \\\"isPageModel && resourceFilename =~ /.*\\\\\\\\.cshtml\\\\\\\\.cs$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+o\\\",\\n        \\\"command\\\": \\\"-extension.goToPageModel\\\",\\n        \\\"when\\\": \\\"isPage && resourceFilename =~ /.*\\\\\\\\.cshtml$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+o\\\",\\n        \\\"command\\\": \\\"-extension.goToView\\\",\\n        \\\"when\\\": \\\"isController && resourceFilename =~ /.*(?<!\\\\\\\\.cshtml|\\\\\\\\.razor)\\\\\\\\.cs$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+.\\\",\\n        \\\"command\\\": \\\"editor.action.nextMatchFindAction\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"f3\\\",\\n        \\\"command\\\": \\\"-editor.action.nextMatchFindAction\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+.\\\",\\n        \\\"command\\\": \\\"workbench.action.terminal.findNext\\\",\\n        \\\"when\\\": \\\"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"f3\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.findNext\\\",\\n        \\\"when\\\": \\\"terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"f9\\\",\\n        \\\"command\\\": \\\"-editor.debug.action.toggleBreakpoint\\\",\\n        \\\"when\\\": \\\"debuggersAvailable && disassemblyViewFocus || debuggersAvailable && editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+m\\\",\\n        \\\"command\\\": \\\"-editor.action.toggleTabFocusMode\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+k\\\",\\n        \\\"command\\\": \\\"-editor.action.accessibilityHelpConfigureKeybindings\\\",\\n        \\\"when\\\": \\\"accessibilityHelpIsShown && accessibleViewHasUnassignedKeybindings\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+v\\\",\\n        \\\"command\\\": \\\"toggleVim\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+alt+cmd+n\\\",\\n        \\\"command\\\": \\\"-welcome.showNewFileEntries\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+backspace\\\",\\n        \\\"command\\\": \\\"-editor.action.removeBrackets\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"f6\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusNextPart\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+f\\\",\\n        \\\"command\\\": \\\"extension.vueFormat\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId == 'vue'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+cmd+p\\\",\\n        \\\"command\\\": \\\"-extension.vueFormat\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId == 'vue'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+1\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusFirstEditorGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+tab\\\",\\n        \\\"command\\\": \\\"workbench.action.focusPreviousPart\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+f6\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusPreviousPart\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+r\\\",\\n        \\\"command\\\": \\\"-java.view.package.revealFileInOS\\\",\\n        \\\"when\\\": \\\"focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+r\\\",\\n        \\\"command\\\": \\\"-rest-client.request\\\",\\n        \\\"when\\\": \\\"editorTextFocus && editorLangId == 'http'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+r\\\",\\n        \\\"command\\\": \\\"-rest-client.request\\\",\\n        \\\"when\\\": \\\"editorTextFocus && editorLangId == 'plaintext'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+r\\\",\\n        \\\"command\\\": \\\"-toggleSearchEditorRegex\\\",\\n        \\\"when\\\": \\\"inSearchEditor && searchInputBoxFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+r\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.toggleFindRegex\\\",\\n        \\\"when\\\": \\\"terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+r\\\",\\n        \\\"command\\\": \\\"-toggleFindRegex\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+r\\\",\\n        \\\"command\\\": \\\"-toggleSearchRegex\\\",\\n        \\\"when\\\": \\\"searchViewletFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+p\\\",\\n        \\\"command\\\": \\\"-extension.addView\\\",\\n        \\\"when\\\": \\\"isController && resourceFilename =~ /.*(?<!\\\\\\\\.cshtml|\\\\\\\\.razor)\\\\\\\\.cs$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+q\\\",\\n        \\\"command\\\": \\\"-workbench.action.quit\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+r\\\",\\n        \\\"command\\\": \\\"-workbench.action.reloadWindow\\\",\\n        \\\"when\\\": \\\"isDevelopment\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+r\\\",\\n        \\\"command\\\": \\\"-jupyter.refreshDataViewer\\\",\\n        \\\"when\\\": \\\"isWorkspaceTrusted && jupyter.dataViewerActive\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+r\\\",\\n        \\\"command\\\": \\\"-python.refreshTensorBoard\\\",\\n        \\\"when\\\": \\\"python.hasActiveTensorBoardSession\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+r\\\",\\n        \\\"command\\\": \\\"-inlineChat.regenerate\\\",\\n        \\\"when\\\": \\\"inlineChatHasProvider && inlineChatVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+t\\\",\\n        \\\"command\\\": \\\"-workbench.action.showAllSymbols\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+u\\\",\\n        \\\"command\\\": \\\"-cursorUndo\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+tab\\\",\\n        \\\"command\\\": \\\"-workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup\\\",\\n        \\\"when\\\": \\\"!activeEditorGroupEmpty\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+tab\\\",\\n        \\\"command\\\": \\\"-workbench.action.quickOpenNavigateNextInEditorPicker\\\",\\n        \\\"when\\\": \\\"inEditorsPicker && inQuickOpen\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+tab\\\",\\n        \\\"command\\\": \\\"-workbench.action.quickOpenLeastRecentlyUsedEditorInGroup\\\",\\n        \\\"when\\\": \\\"!activeEditorGroupEmpty\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+q\\\",\\n        \\\"command\\\": \\\"-extension.vim_winCtrlQ\\\",\\n        \\\"when\\\": \\\"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+q\\\",\\n        \\\"command\\\": \\\"-workbench.action.quickOpenNavigateNextInViewPicker\\\",\\n        \\\"when\\\": \\\"inQuickOpen && inViewsPicker\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+q\\\",\\n        \\\"command\\\": \\\"-workbench.action.quickOpenView\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+q\\\",\\n        \\\"command\\\": \\\"-workbench.action.quickOpenNavigatePreviousInViewPicker\\\",\\n        \\\"when\\\": \\\"inQuickOpen && inViewsPicker\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+]\\\",\\n        \\\"command\\\": \\\"-workbench.action.nextEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+r\\\",\\n        \\\"command\\\": \\\"-extension.newAREPLSession\\\",\\n        \\\"when\\\": \\\"!inQuickOpen && !terminalFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+r\\\",\\n        \\\"command\\\": \\\"-extension.vsKubernetesDescribe.Refresh\\\",\\n        \\\"when\\\": \\\"vscodeKubernetesDescribeContext\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+r\\\",\\n        \\\"command\\\": \\\"-rerunSearchEditorSearch\\\",\\n        \\\"when\\\": \\\"inSearchEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+r\\\",\\n        \\\"command\\\": \\\"-reactSnippets.search\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+e\\\",\\n        \\\"command\\\": \\\"workbench.view.explorer\\\",\\n        \\\"when\\\": \\\"viewContainer.workbench.view.explorer.enabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+e\\\",\\n        \\\"command\\\": \\\"-workbench.view.explorer\\\",\\n        \\\"when\\\": \\\"viewContainer.workbench.view.explorer.enabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+u\\\",\\n        \\\"command\\\": \\\"-workbench.action.output.toggleOutput\\\",\\n        \\\"when\\\": \\\"workbench.panel.output.active\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+i\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.openEditSession\\\",\\n        \\\"when\\\": \\\"chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+o\\\",\\n        \\\"command\\\": \\\"-editor.action.accessibleViewGoToSymbol\\\",\\n        \\\"when\\\": \\\"accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+o\\\",\\n        \\\"command\\\": \\\"-workbench.action.gotoSymbol\\\",\\n        \\\"when\\\": \\\"!accessibilityHelpIsShown && !accessibleViewIsShown\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+o\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.openDetectedLink\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+p\\\",\\n        \\\"command\\\": \\\"-workbench.action.quickOpenNavigatePreviousInFilePicker\\\",\\n        \\\"when\\\": \\\"inFilesPicker && inQuickOpen\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+a\\\",\\n        \\\"command\\\": \\\"-extension.currentAREPLSession\\\",\\n        \\\"when\\\": \\\"!inQuickOpen && !terminalFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+]\\\",\\n        \\\"command\\\": \\\"workbench.action.nextEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+right\\\",\\n        \\\"command\\\": \\\"-workbench.action.nextEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+left\\\",\\n        \\\"command\\\": \\\"-workbench.action.previousEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k alt+cmd+right\\\",\\n        \\\"command\\\": \\\"-workbench.action.nextEditorInGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+[\\\",\\n        \\\"command\\\": \\\"-workbench.action.previousEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k alt+cmd+left\\\",\\n        \\\"command\\\": \\\"-workbench.action.previousEditorInGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+tab\\\",\\n        \\\"command\\\": \\\"-workbench.action.quickOpenNavigatePreviousInEditorPicker\\\",\\n        \\\"when\\\": \\\"inEditorsPicker && inQuickOpen\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+left\\\",\\n        \\\"command\\\": \\\"-list.collapseAll\\\",\\n        \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+left\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.sendSequence\\\",\\n        \\\"when\\\": \\\"terminalFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+left\\\",\\n        \\\"command\\\": \\\"-cursorHome\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+left\\\",\\n        \\\"command\\\": \\\"-cursorWordAccessibilityLeft\\\",\\n        \\\"when\\\": \\\"accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+left\\\",\\n        \\\"command\\\": \\\"-cursorHomeSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+left\\\",\\n        \\\"command\\\": \\\"-cursorWordAccessibilityLeftSelect\\\",\\n        \\\"when\\\": \\\"accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+right\\\",\\n        \\\"command\\\": \\\"-cursorEnd\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"end\\\",\\n        \\\"command\\\": \\\"-cursorEnd\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+right\\\",\\n        \\\"command\\\": \\\"-cursorEndSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+end\\\",\\n        \\\"command\\\": \\\"-cursorEndSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+right\\\",\\n        \\\"command\\\": \\\"cursorLineEnd\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+e\\\",\\n        \\\"command\\\": \\\"-cursorLineEnd\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+right\\\",\\n        \\\"command\\\": \\\"cursorLineEndSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+e\\\",\\n        \\\"command\\\": \\\"-cursorLineEndSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+alt+cmd+right\\\",\\n        \\\"command\\\": \\\"-quickInput.acceptInBackground\\\",\\n        \\\"when\\\": \\\"cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+right\\\",\\n        \\\"command\\\": \\\"-quickInput.acceptInBackground\\\",\\n        \\\"when\\\": \\\"cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+cmd+right\\\",\\n        \\\"command\\\": \\\"-quickInput.acceptInBackground\\\",\\n        \\\"when\\\": \\\"cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+alt+right\\\",\\n        \\\"command\\\": \\\"-quickInput.acceptInBackground\\\",\\n        \\\"when\\\": \\\"cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+right\\\",\\n        \\\"command\\\": \\\"-quickInput.acceptInBackground\\\",\\n        \\\"when\\\": \\\"cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+right\\\",\\n        \\\"command\\\": \\\"-quickInput.acceptInBackground\\\",\\n        \\\"when\\\": \\\"cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"right\\\",\\n        \\\"command\\\": \\\"-quickInput.acceptInBackground\\\",\\n        \\\"when\\\": \\\"cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"home\\\",\\n        \\\"command\\\": \\\"-cursorHome\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+home\\\",\\n        \\\"command\\\": \\\"-cursorHomeSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+left\\\",\\n        \\\"command\\\": \\\"cursorLineStart\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+a\\\",\\n        \\\"command\\\": \\\"-cursorLineStart\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+left\\\",\\n        \\\"command\\\": \\\"cursorLineStartSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+a\\\",\\n        \\\"command\\\": \\\"-cursorLineStartSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+alt+left\\\",\\n        \\\"command\\\": \\\"-cursorWordPartLeft\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+alt+left\\\",\\n        \\\"command\\\": \\\"-cursorWordPartLeftSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+left\\\",\\n        \\\"command\\\": \\\"-cursorWordLeft\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+left\\\",\\n        \\\"command\\\": \\\"-cursorWordLeftSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+left\\\",\\n        \\\"command\\\": \\\"cursorWordPartLeft\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+right\\\",\\n        \\\"command\\\": \\\"cursorWordPartRight\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+alt+right\\\",\\n        \\\"command\\\": \\\"-cursorWordPartRight\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+right\\\",\\n        \\\"command\\\": \\\"cursorWordPartRightSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+alt+right\\\",\\n        \\\"command\\\": \\\"-cursorWordPartRightSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+left\\\",\\n        \\\"command\\\": \\\"cursorWordPartLeftSelect\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+right\\\",\\n        \\\"command\\\": \\\"-cursorWordAccessibilityRight\\\",\\n        \\\"when\\\": \\\"accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+right\\\",\\n        \\\"command\\\": \\\"-cursorWordAccessibilityRightSelect\\\",\\n        \\\"when\\\": \\\"accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+right\\\",\\n        \\\"command\\\": \\\"-cursorWordEndRight\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+right\\\",\\n        \\\"command\\\": \\\"-cursorWordEndRightSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+left\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.sendSequence\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalShellType == 'pwsh'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+right\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.sendSequence\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+right\\\",\\n        \\\"command\\\": \\\"-editor.action.inlineSuggest.acceptNextWord\\\",\\n        \\\"when\\\": \\\"inlineSuggestionVisible && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+left\\\",\\n        \\\"command\\\": \\\"-breadcrumbs.focusPrevious\\\",\\n        \\\"when\\\": \\\"breadcrumbsActive && breadcrumbsVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+left\\\",\\n        \\\"command\\\": \\\"-breadcrumbs.focusPreviousWithPicker\\\",\\n        \\\"when\\\": \\\"breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+right\\\",\\n        \\\"command\\\": \\\"-breadcrumbs.focusNext\\\",\\n        \\\"when\\\": \\\"breadcrumbsActive && breadcrumbsVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+right\\\",\\n        \\\"command\\\": \\\"-breadcrumbs.focusNextWithPicker\\\",\\n        \\\"when\\\": \\\"breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+[\\\",\\n        \\\"command\\\": \\\"-editor.action.accessibleViewPrevious\\\",\\n        \\\"when\\\": \\\"accessibleViewIsShown && accessibleViewSupportsNavigation\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+[\\\",\\n        \\\"command\\\": \\\"-editor.action.inlineSuggest.showPrevious\\\",\\n        \\\"when\\\": \\\"inlineSuggestionVisible && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+]\\\",\\n        \\\"command\\\": \\\"-editor.action.accessibleViewNext\\\",\\n        \\\"when\\\": \\\"accessibleViewIsShown && accessibleViewSupportsNavigation\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+]\\\",\\n        \\\"command\\\": \\\"-editor.action.inlineSuggest.showNext\\\",\\n        \\\"when\\\": \\\"inlineSuggestionVisible && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+[\\\",\\n        \\\"command\\\": \\\"-workbench.action.debug.prevConsole\\\",\\n        \\\"when\\\": \\\"inDebugRepl\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+[\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.focusPrevious\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+]\\\",\\n        \\\"command\\\": \\\"-workbench.action.debug.nextConsole\\\",\\n        \\\"when\\\": \\\"inDebugRepl\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+]\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.focusNext\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-extension.executeAREPLBlock\\\",\\n        \\\"when\\\": \\\"editorTextFocus && editorLangId == 'python'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-repl.execute\\\",\\n        \\\"when\\\": \\\"activeEditor == 'workbench.editor.repl'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"-chatEditing.acceptAllFiles\\\",\\n        \\\"when\\\": \\\"hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.acceptSelectedSuggestionEnter\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore' || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && config.terminal.integrated.suggest.runOnEnter != 'ignore'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+enter\\\",\\n        \\\"command\\\": \\\"acceptSelectedSuggestionOnEnter\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+left\\\",\\n        \\\"command\\\": \\\"-editor.action.smartSelect.shrink\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+shift+right\\\",\\n        \\\"command\\\": \\\"-editor.action.smartSelect.expand\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-interactive.input.focus\\\",\\n        \\\"when\\\": \\\"isCompositeNotebook && notebookEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-notebook.cell.focusInOutput\\\",\\n        \\\"when\\\": \\\"isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-chat.action.focus\\\",\\n        \\\"when\\\": \\\"inChat && inChatInput && quickChatHasFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-inlineChat.viewInChat\\\",\\n        \\\"when\\\": \\\"inChatInput && inlineChatHasProvider && inlineChatVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-notebook.cell.focusNextChatWidget\\\",\\n        \\\"when\\\": \\\"editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.focusInput\\\",\\n        \\\"when\\\": \\\"inChat && !inChatInput && !quickChatHasFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+down\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.selectToNextCommand\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+down\\\",\\n        \\\"command\\\": \\\"-cursorBottomSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+[\\\",\\n        \\\"command\\\": \\\"workbench.action.previousEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+q\\\",\\n        \\\"command\\\": \\\"workbench.action.focusNextPart\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"delete\\\",\\n        \\\"command\\\": \\\"deleteFile\\\",\\n        \\\"when\\\": \\\"filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus && !treeFindOpen\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+backspace\\\",\\n        \\\"command\\\": \\\"-deleteFile\\\",\\n        \\\"when\\\": \\\"filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus && !treeFindOpen\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k e\\\",\\n        \\\"command\\\": \\\"-workbench.files.action.focusOpenEditorsView\\\",\\n        \\\"when\\\": \\\"workbench.explorer.openEditorsView.active\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+w\\\",\\n        \\\"command\\\": \\\"-toggleSearchEditorWholeWord\\\",\\n        \\\"when\\\": \\\"inSearchEditor && searchInputBoxFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+w\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.toggleFindWholeWord\\\",\\n        \\\"when\\\": \\\"terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+w\\\",\\n        \\\"command\\\": \\\"-toggleFindWholeWord\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+w\\\",\\n        \\\"command\\\": \\\"-toggleSearchWholeWord\\\",\\n        \\\"when\\\": \\\"searchViewletFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+e\\\",\\n        \\\"command\\\": \\\"-emulator.start\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+e\\\",\\n        \\\"command\\\": \\\"-rest-client.switch-environment\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+i\\\",\\n        \\\"command\\\": \\\"-workbench.action.toggleDevTools\\\",\\n        \\\"when\\\": \\\"isDevelopment\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+c\\\",\\n        \\\"command\\\": \\\"-search.action.copyPath\\\",\\n        \\\"when\\\": \\\"fileMatchOrFolderMatchWithResourceFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k p\\\",\\n        \\\"command\\\": \\\"-workbench.action.files.copyPathOfActiveFile\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+cmd+c\\\",\\n        \\\"command\\\": \\\"-java.view.package.copyFilePath\\\",\\n        \\\"when\\\": \\\"focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+cmd+c\\\",\\n        \\\"command\\\": \\\"-java.view.package.copyRelativeFilePath\\\",\\n        \\\"when\\\": \\\"focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+alt+cmd+c\\\",\\n        \\\"command\\\": \\\"-copyRelativeFilePath\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k alt+cmd+c\\\",\\n        \\\"command\\\": \\\"-copyFilePath\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+w\\\",\\n        \\\"command\\\": \\\"-workbench.action.closeGroup\\\",\\n        \\\"when\\\": \\\"activeEditorGroupEmpty && multipleEditorGroups\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+g\\\",\\n        \\\"command\\\": \\\"-workbench.action.gotoLine\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+up\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.selectToPreviousCommand\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+up\\\",\\n        \\\"command\\\": \\\"-cursorTopSelect\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+up\\\",\\n        \\\"command\\\": \\\"-list.collapseAll\\\",\\n        \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-inlineChat.focus\\\",\\n        \\\"when\\\": \\\"editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-interactive.history.focus\\\",\\n        \\\"when\\\": \\\"isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-interactive.history.focus\\\",\\n        \\\"when\\\": \\\"isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.scrollToPreviousCommand\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-chat.action.focus\\\",\\n        \\\"when\\\": \\\"chatCursorAtTop && inChatInput && !quickChatHasFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-chat.action.focus\\\",\\n        \\\"when\\\": \\\"inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-cursorTop\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-inlineChat.arrowOutUp\\\",\\n        \\\"when\\\": \\\"inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-interactive.scrollToTop\\\",\\n        \\\"when\\\": \\\"activeEditor == 'workbench.editor.interactive'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-list.collapse\\\",\\n        \\\"when\\\": \\\"listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-list.scrollUp\\\",\\n        \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-list.stickyScroll.collapse\\\",\\n        \\\"when\\\": \\\"treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-notebook.cell.chat.arrowOutUp\\\",\\n        \\\"when\\\": \\\"inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-notebook.cell.chat.focus\\\",\\n        \\\"when\\\": \\\"notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-notebook.cell.chat.focusPreviousCell\\\",\\n        \\\"when\\\": \\\"inlineChatFocused && notebookCellChatFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-notebook.cell.focusChatWidget\\\",\\n        \\\"when\\\": \\\"editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-quickInput.previousSeparatorWithQuickAccessFallback\\\",\\n        \\\"when\\\": \\\"inQuickInput && quickInputType == 'quickPick'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-search.action.focusSearchFromResults\\\",\\n        \\\"when\\\": \\\"accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-search.focus.previousInputBox\\\",\\n        \\\"when\\\": \\\"inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-selectPrevCodeAction\\\",\\n        \\\"when\\\": \\\"codeActionMenuVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-selectPrevSuggestion\\\",\\n        \\\"when\\\": \\\"suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-widgetNavigation.focusPrevious\\\",\\n        \\\"when\\\": \\\"inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-workbench.action.chat.focusInput\\\",\\n        \\\"when\\\": \\\"inChat && quickChatHasFocus && !inChatInput\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.focusAccessibleBuffer\\\",\\n        \\\"when\\\": \\\"accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+end\\\",\\n        \\\"command\\\": \\\"-notebook.focusBottom\\\",\\n        \\\"when\\\": \\\"notebookEditorFocused && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+up\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.accessibleBufferGoToPreviousCommand\\\",\\n        \\\"when\\\": \\\"accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+f8\\\",\\n        \\\"command\\\": \\\"-testing.goToPreviousMessage\\\",\\n        \\\"when\\\": \\\"editorFocus && testing.isPeekVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+f12\\\",\\n        \\\"command\\\": \\\"-goToPreviousReference\\\",\\n        \\\"when\\\": \\\"inReferenceSearchEditor || referenceSearchVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+f4\\\",\\n        \\\"command\\\": \\\"-goToPreviousReference\\\",\\n        \\\"when\\\": \\\"inReferenceSearchEditor || referenceSearchVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+up\\\",\\n        \\\"command\\\": \\\"-notebook.cell.moveUp\\\",\\n        \\\"when\\\": \\\"notebookEditorFocused && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+up\\\",\\n        \\\"command\\\": \\\"-editor.action.pageUpHover\\\",\\n        \\\"when\\\": \\\"editorHoverFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+up\\\",\\n        \\\"command\\\": \\\"-history.showPrevious\\\",\\n        \\\"when\\\": \\\"historyNavigationBackwardsEnabled && historyNavigationWidgetFocus && !isComposing && !suggestWidgetVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+up\\\",\\n        \\\"command\\\": \\\"-list.focusAnyUp\\\",\\n        \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+up\\\",\\n        \\\"command\\\": \\\"-markdown.extension.onMoveLineUp\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && !suggestWidgetVisible && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+up\\\",\\n        \\\"command\\\": \\\"-scm.forceViewPreviousCommit\\\",\\n        \\\"when\\\": \\\"scmRepository\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+up\\\",\\n        \\\"command\\\": \\\"-showPrevParameterHint\\\",\\n        \\\"when\\\": \\\"editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-notebook.focusTop\\\",\\n        \\\"when\\\": \\\"notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == ''\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"-editor.action.goToBottomHover\\\",\\n        \\\"when\\\": \\\"editorHoverFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"-editor.action.goToTopHover\\\",\\n        \\\"when\\\": \\\"editorHoverFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+down\\\",\\n        \\\"command\\\": \\\"editor.action.inlineSuggest.acceptNextLine\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+up\\\",\\n        \\\"command\\\": \\\"editor.action.inlineSuggest.acceptNextWord\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+n\\\",\\n        \\\"command\\\": \\\"workbench.action.terminal.openNativeConsole\\\",\\n        \\\"when\\\": \\\"!terminalFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+c\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.openNativeConsole\\\",\\n        \\\"when\\\": \\\"!terminalFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+cmd+f\\\",\\n        \\\"command\\\": \\\"-workbench.action.toggleFullScreen\\\",\\n        \\\"when\\\": \\\"!isIOS\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+c\\\",\\n        \\\"command\\\": \\\"-editor.action.addCommentLine\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k m\\\",\\n        \\\"command\\\": \\\"-workbench.action.editor.changeLanguageMode\\\",\\n        \\\"when\\\": \\\"!notebookEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k alt+cmd+c\\\",\\n        \\\"command\\\": \\\"-workbench.action.addComment\\\",\\n        \\\"when\\\": \\\"activeCursorHasCommentingRange\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k alt+cmd+down\\\",\\n        \\\"command\\\": \\\"-editor.action.nextCommentingRange\\\",\\n        \\\"when\\\": \\\"accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k alt+cmd+up\\\",\\n        \\\"command\\\": \\\"-editor.action.previousCommentingRange\\\",\\n        \\\"when\\\": \\\"accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+,\\\",\\n        \\\"command\\\": \\\"-editor.createFoldingRangeFromSelection\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+i\\\",\\n        \\\"command\\\": \\\"-editor.debug.action.showDebugHover\\\",\\n        \\\"when\\\": \\\"editorTextFocus && inDebugMode\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+k\\\",\\n        \\\"command\\\": \\\"-editor.action.defineKeybinding\\\",\\n        \\\"when\\\": \\\"resource == 'vscode-userdata:/Users/yyx/Library/Application%20Support/Code/User/keybindings.json'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k c\\\",\\n        \\\"command\\\": \\\"-workbench.files.action.compareWithClipboard\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k d\\\",\\n        \\\"command\\\": \\\"-workbench.files.action.compareWithSaved\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k s\\\",\\n        \\\"command\\\": \\\"-workbench.action.files.saveWithoutFormatting\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+0\\\",\\n        \\\"command\\\": \\\"-editor.foldAll\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+/\\\",\\n        \\\"command\\\": \\\"-editor.foldAllBlockComments\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+8\\\",\\n        \\\"command\\\": \\\"-editor.foldAllMarkerRegions\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+1\\\",\\n        \\\"command\\\": \\\"-editor.foldLevel1\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+2\\\",\\n        \\\"command\\\": \\\"-editor.foldLevel2\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+3\\\",\\n        \\\"command\\\": \\\"-editor.foldLevel3\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+4\\\",\\n        \\\"command\\\": \\\"-editor.foldLevel4\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+5\\\",\\n        \\\"command\\\": \\\"-editor.foldLevel5\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+6\\\",\\n        \\\"command\\\": \\\"-editor.foldLevel6\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+7\\\",\\n        \\\"command\\\": \\\"-editor.foldLevel7\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+[\\\",\\n        \\\"command\\\": \\\"-editor.foldRecursively\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+f\\\",\\n        \\\"command\\\": \\\"-editor.action.formatSelection\\\",\\n        \\\"when\\\": \\\"editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+r\\\",\\n        \\\"command\\\": \\\"-git.revertSelectedRanges\\\",\\n        \\\"when\\\": \\\"isInDiffEditor && !operationInProgress\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k alt+cmd+s\\\",\\n        \\\"command\\\": \\\"-git.stageSelectedRanges\\\",\\n        \\\"when\\\": \\\"isInDiffEditor && !operationInProgress\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+n\\\",\\n        \\\"command\\\": \\\"-git.unstageSelectedRanges\\\",\\n        \\\"when\\\": \\\"isInDiffEditor && !operationInProgress\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+r\\\",\\n        \\\"command\\\": \\\"-workbench.action.keybindingsReference\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k i\\\",\\n        \\\"command\\\": \\\"-inlineChat.start\\\",\\n        \\\"when\\\": \\\"editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k v\\\",\\n        \\\"command\\\": \\\"-markdown.showPreviewToSide\\\",\\n        \\\"when\\\": \\\"!notebookEditorFocused && editorLangId == 'markdown'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+d\\\",\\n        \\\"command\\\": \\\"-editor.action.moveSelectionToNextFindMatch\\\",\\n        \\\"when\\\": \\\"editorFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+c\\\",\\n        \\\"command\\\": \\\"-notebook.cell.collapseCellInput\\\",\\n        \\\"when\\\": \\\"notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k t\\\",\\n        \\\"command\\\": \\\"-notebook.cell.collapseCellOutput\\\",\\n        \\\"when\\\": \\\"notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+c\\\",\\n        \\\"command\\\": \\\"-notebook.cell.expandCellInput\\\",\\n        \\\"when\\\": \\\"notebookCellInputIsCollapsed && notebookCellListFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k t\\\",\\n        \\\"command\\\": \\\"-notebook.cell.expandCellOutput\\\",\\n        \\\"when\\\": \\\"notebookCellListFocused && notebookCellOutputIsCollapsed\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+cmd+\\\\\\\\\\\",\\n        \\\"command\\\": \\\"-notebook.cell.split\\\",\\n        \\\"when\\\": \\\"editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k y\\\",\\n        \\\"command\\\": \\\"-notebook.cell.toggleOutputScrolling\\\",\\n        \\\"when\\\": \\\"notebookCellHasOutputs && notebookCellListFocused && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+cmd+n\\\",\\n        \\\"command\\\": \\\"-notifications.showList\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k f12\\\",\\n        \\\"command\\\": \\\"-editor.action.revealDefinitionAside\\\",\\n        \\\"when\\\": \\\"editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+f12\\\",\\n        \\\"command\\\": \\\"-editor.action.revealDefinitionAside\\\",\\n        \\\"when\\\": \\\"editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+t\\\",\\n        \\\"command\\\": \\\"-workbench.action.selectTheme\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+s\\\",\\n        \\\"command\\\": \\\"-workbench.action.openGlobalKeybindings\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+u\\\",\\n        \\\"command\\\": \\\"-editor.action.removeCommentLine\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+.\\\",\\n        \\\"command\\\": \\\"-editor.removeManualFoldingRanges\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+k\\\",\\n        \\\"command\\\": \\\"-editor.action.selectFromAnchorToCursor\\\",\\n        \\\"when\\\": \\\"editorTextFocus && selectionAnchorSet\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+b\\\",\\n        \\\"command\\\": \\\"-editor.action.setSelectionAnchor\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+i\\\",\\n        \\\"command\\\": \\\"-editor.action.showHover\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.clear\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+i\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.focusHover\\\",\\n        \\\"when\\\": \\\"terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+x\\\",\\n        \\\"command\\\": \\\"-editor.action.trimTrailingWhitespace\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+j\\\",\\n        \\\"command\\\": \\\"-editor.unfoldAll\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+9\\\",\\n        \\\"command\\\": \\\"-editor.unfoldAllMarkerRegions\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+]\\\",\\n        \\\"command\\\": \\\"-editor.unfoldRecursively\\\",\\n        \\\"when\\\": \\\"editorTextFocus && foldingEnabled\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+cmd+w\\\",\\n        \\\"command\\\": \\\"-workbench.action.closeAllGroups\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+w\\\",\\n        \\\"command\\\": \\\"-workbench.action.closeAllEditors\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k w\\\",\\n        \\\"command\\\": \\\"-workbench.action.closeEditorsInGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k u\\\",\\n        \\\"command\\\": \\\"-workbench.action.closeUnmodifiedEditors\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+up\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusAboveGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+down\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusBelowGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+left\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusLeftGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+right\\\",\\n        \\\"command\\\": \\\"-workbench.action.focusRightGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+cmd+\\\\\\\\\\\",\\n        \\\"command\\\": \\\"-workbench.action.joinEditorInGroup\\\",\\n        \\\"when\\\": \\\"sideBySideEditorActive\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.keepEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k down\\\",\\n        \\\"command\\\": \\\"-workbench.action.moveActiveEditorGroupDown\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k left\\\",\\n        \\\"command\\\": \\\"-workbench.action.moveActiveEditorGroupLeft\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k right\\\",\\n        \\\"command\\\": \\\"-workbench.action.moveActiveEditorGroupRight\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k up\\\",\\n        \\\"command\\\": \\\"-workbench.action.moveActiveEditorGroupUp\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+cmd+left\\\",\\n        \\\"command\\\": \\\"-workbench.action.moveEditorLeftInGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+cmd+right\\\",\\n        \\\"command\\\": \\\"-workbench.action.moveEditorRightInGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.pinEditor\\\",\\n        \\\"when\\\": \\\"!activeEditorIsPinned\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+\\\\\\\\\\\",\\n        \\\"command\\\": \\\"-workbench.action.splitEditorDown\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+cmd+\\\\\\\\\\\",\\n        \\\"command\\\": \\\"-workbench.action.splitEditorInGroup\\\",\\n        \\\"when\\\": \\\"activeEditorCanSplitInGroup\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+\\\\\\\\\\\",\\n        \\\"command\\\": \\\"-workbench.action.splitEditorLeft\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+\\\\\\\\\\\",\\n        \\\"command\\\": \\\"-workbench.action.splitEditorOrthogonal\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+\\\\\\\\\\\",\\n        \\\"command\\\": \\\"-workbench.action.splitEditorRight\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+\\\\\\\\\\\",\\n        \\\"command\\\": \\\"-workbench.action.splitEditorUp\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+enter\\\",\\n        \\\"command\\\": \\\"-workbench.action.unpinEditor\\\",\\n        \\\"when\\\": \\\"activeEditorIsPinned\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k f\\\",\\n        \\\"command\\\": \\\"-workbench.action.closeFolder\\\",\\n        \\\"when\\\": \\\"emptyWorkspaceSupport && workbenchState != 'empty'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+a\\\",\\n        \\\"command\\\": \\\"-keybindings.editor.addKeybinding\\\",\\n        \\\"when\\\": \\\"inKeybindings && keybindingFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+e\\\",\\n        \\\"command\\\": \\\"-keybindings.editor.defineWhenExpression\\\",\\n        \\\"when\\\": \\\"inKeybindings && keybindingFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k cmd+i\\\",\\n        \\\"command\\\": \\\"-list.showHover\\\",\\n        \\\"when\\\": \\\"listFocus && !inputFocus && !treestickyScrollFocused\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k v\\\",\\n        \\\"command\\\": \\\"-markdown.extension.closePreview\\\",\\n        \\\"when\\\": \\\"activeWebviewPanelId == 'markdown.preview'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k i\\\",\\n        \\\"command\\\": \\\"-notebook.cell.chat.start\\\",\\n        \\\"when\\\": \\\"config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k f2\\\",\\n        \\\"command\\\": \\\"-togglePeekWidgetFocus\\\",\\n        \\\"when\\\": \\\"inReferenceSearchEditor || referenceSearchVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k down\\\",\\n        \\\"command\\\": \\\"-views.moveViewDown\\\",\\n        \\\"when\\\": \\\"focusedView != ''\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k left\\\",\\n        \\\"command\\\": \\\"-views.moveViewLeft\\\",\\n        \\\"when\\\": \\\"focusedView != ''\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k right\\\",\\n        \\\"command\\\": \\\"-views.moveViewRight\\\",\\n        \\\"when\\\": \\\"focusedView != ''\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k up\\\",\\n        \\\"command\\\": \\\"-views.moveViewUp\\\",\\n        \\\"when\\\": \\\"focusedView != ''\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k shift+o\\\",\\n        \\\"command\\\": \\\"-workbench.action.compareEditor.openSide\\\",\\n        \\\"when\\\": \\\"inDiffEditor\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k r\\\",\\n        \\\"command\\\": \\\"-workbench.action.files.revealActiveFileInWindows\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+m\\\",\\n        \\\"command\\\": \\\"editor.action.toggleMinimap\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+l cmd+o\\\",\\n        \\\"command\\\": \\\"-extension.liveServer.goOnline\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+l cmd+c\\\",\\n        \\\"command\\\": \\\"-extension.liveServer.goOffline\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+l\\\",\\n        \\\"command\\\": \\\"-expandLineSelection\\\",\\n        \\\"when\\\": \\\"textInputFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+backspace\\\",\\n        \\\"command\\\": \\\"-java.view.package.moveFileToTrash\\\",\\n        \\\"when\\\": \\\"explorerResourceMoveableToTrash && focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+backspace\\\",\\n        \\\"command\\\": \\\"-java.view.package.deleteFilePermanently\\\",\\n        \\\"when\\\": \\\"!explorerResourceMoveableToTrash && focusedView == 'javaProjectExplorer' && java:serverMode == 'Standard'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+k\\\",\\n        \\\"command\\\": \\\"-workbench.debug.panel.action.clearReplAction\\\",\\n        \\\"when\\\": \\\"focusedView == 'workbench.panel.repl.view'\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+h\\\",\\n        \\\"command\\\": \\\"workbench.action.terminal.toggleTerminal\\\",\\n        \\\"when\\\": \\\"terminal.active\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+`\\\",\\n        \\\"command\\\": \\\"-workbench.action.terminal.toggleTerminal\\\",\\n        \\\"when\\\": \\\"terminal.active\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+l\\\",\\n        \\\"command\\\": \\\"toggleFindInSelection\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+cmd+y\\\",\\n        \\\"command\\\": \\\"-workbench.debug.action.toggleRepl\\\",\\n        \\\"when\\\": \\\"workbench.panel.repl.view.active\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+\\\\\\\\\\\",\\n        \\\"command\\\": \\\"workbench.action.compareEditor.swapSides\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+;\\\",\\n        \\\"command\\\": \\\"workbench.files.action.compareFileWith\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+'\\\",\\n        \\\"command\\\": \\\"workbench.files.action.compareNewUntitledTextFiles\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; cmd+a\\\",\\n        \\\"command\\\": \\\"-testing.debugAll\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; cmd+e\\\",\\n        \\\"command\\\": \\\"-testing.debugFailTests\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; cmd+l\\\",\\n        \\\"command\\\": \\\"-testing.debugLastRun\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; cmd+c\\\",\\n        \\\"command\\\": \\\"-testing.debugAtCursor\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; cmd+f\\\",\\n        \\\"command\\\": \\\"-testing.debugCurrentFile\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; cmd+m\\\",\\n        \\\"command\\\": \\\"-testing.openOutputPeek\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; cmd+r\\\",\\n        \\\"command\\\": \\\"-testing.refreshTests\\\",\\n        \\\"when\\\": \\\"testing.canRefresh\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; e\\\",\\n        \\\"command\\\": \\\"-testing.reRunFailTests\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; l\\\",\\n        \\\"command\\\": \\\"-testing.reRunLastRun\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; shift+cmd+l\\\",\\n        \\\"command\\\": \\\"-testing.coverageLastRun\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; a\\\",\\n        \\\"command\\\": \\\"-testing.runAll\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; shift+cmd+a\\\",\\n        \\\"command\\\": \\\"-testing.coverageAll\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; c\\\",\\n        \\\"command\\\": \\\"-testing.runAtCursor\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; shift+cmd+c\\\",\\n        \\\"command\\\": \\\"-testing.coverageAtCursor\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; f\\\",\\n        \\\"command\\\": \\\"-testing.runCurrentFile\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; shift+cmd+f\\\",\\n        \\\"command\\\": \\\"-testing.coverageCurrentFile\\\",\\n        \\\"when\\\": \\\"editorTextFocus\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; cmd+o\\\",\\n        \\\"command\\\": \\\"-testing.showMostRecentOutput\\\",\\n        \\\"when\\\": \\\"testing.hasAnyResults\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; shift+cmd+i\\\",\\n        \\\"command\\\": \\\"-testing.toggleInlineCoverage\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; cmd+i\\\",\\n        \\\"command\\\": \\\"-testing.toggleInlineTestOutput\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+; cmd+x\\\",\\n        \\\"command\\\": \\\"-testing.cancelRun\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+'\\\",\\n        \\\"command\\\": \\\"workbench.action.compareEditor.nextChange\\\",\\n        \\\"when\\\": \\\"textCompareEditorVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+f5\\\",\\n        \\\"command\\\": \\\"-workbench.action.compareEditor.nextChange\\\",\\n        \\\"when\\\": \\\"textCompareEditorVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"cmd+;\\\",\\n        \\\"command\\\": \\\"workbench.action.compareEditor.previousChange\\\",\\n        \\\"when\\\": \\\"textCompareEditorVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"shift+alt+f5\\\",\\n        \\\"command\\\": \\\"-workbench.action.compareEditor.previousChange\\\",\\n        \\\"when\\\": \\\"textCompareEditorVisible\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"ctrl+k\\\",\\n        \\\"command\\\": \\\"-deleteAllRight\\\",\\n        \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\"\\n    }\\n]\"}"}}